import{_ as t,c as d,o as r,a2 as a}from"./chunks/framework.4_bZ6nyl.js";const _=JSON.parse('{"title":"UNIX 指令","description":"","frontmatter":{},"headers":[],"relativePath":"WorkSkill/Unix指令.md","filePath":"WorkSkill/Unix指令.md"}'),e={name:"WorkSkill/Unix指令.md"},o=a('<h1 id="unix-指令" tabindex="-1">UNIX 指令 <a class="header-anchor" href="#unix-指令" aria-label="Permalink to &quot;UNIX 指令&quot;">​</a></h1><h6 id="tags-工作" tabindex="-1">tags:<code>工作</code> <a class="header-anchor" href="#tags-工作" aria-label="Permalink to &quot;tags:`工作`&quot;">​</a></h6><p><strong>路徑指令</strong></p><table tabindex="0"><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td>.</td><td>目前目錄</td></tr><tr><td>..</td><td>上層目錄</td></tr><tr><td>~</td><td>目前使用者根目錄</td></tr><tr><td>-</td><td>回到前面一個目錄</td></tr><tr><td>cd</td><td>Change Directory</td></tr><tr><td>pwd</td><td>Print Working Directory</td></tr></tbody></table><p><strong>檔案操作指令</strong></p><table tabindex="0"><thead><tr><th>指令</th><th>說明</th></tr></thead><tbody><tr><td>mkdir</td><td>Make Directory</td></tr><tr><td>mkdir -p a/b/c</td><td>#一次創多層目錄</td></tr><tr><td>mkdir -m 711 a</td><td>#直接指派權限</td></tr><tr><td>rmdir</td><td>Remove &quot;empty&quot; Directory(只能砍空的)</td></tr><tr><td>rm -r abc</td><td>#1把目錄裡所有東西砍掉</td></tr><tr><td>ls</td><td>列出目錄檔案 (-a 包含隱藏檔 -l 包含屬性與權限)</td></tr><tr><td>touch</td><td>建立檔案</td></tr><tr><td>touch abc</td><td>#建立一個檔名叫abc的檔案</td></tr><tr><td>cp</td><td>copy</td></tr><tr><td>cp ~/a/ha.cpp ~/b/ha2.cpp</td><td>#a移動到b，改名叫ha2.cpp</td></tr><tr><td>cp -r ~/a</td><td>#複製a整個資料夾到目前位置，但權限有可能被改變，所以要加上-a</td></tr><tr><td>cp -s ha.cpp ha2.cpp</td><td>#建立捷徑</td></tr><tr><td>rm</td><td>remove</td></tr><tr><td>-f a.cpp</td><td>#強制刪除</td></tr><tr><td>-i a.cpp</td><td>#互動詢問是否確定要刪除(預設)</td></tr><tr><td>-r</td><td>#遞迴刪除，常用在砍目錄</td></tr><tr><td>mv</td><td>move or rename</td></tr><tr><td>mv a/ a2/</td><td>#重新命名</td></tr><tr><td>mv a.cpp b.cpp a/</td><td>#將a.cpp和b.cpp移到a目錄下</td></tr><tr><td>chmod 755 a.cpp</td><td>更改檔案屬性 (rwx 421)</td></tr><tr><td>chmod 4755 a.cpp #set-uid(SUID) rws</td><td>#執行者具有x權限，且在run-time擁有own權限 <br> #ex: /usr/bin/passwd</td></tr><tr><td>file 檔名</td><td>看檔案類型</td></tr></tbody></table><p><strong>搜尋</strong></p><table tabindex="0"><thead><tr><th>which sudo</th><th>搜尋指令執行檔位置</th></tr></thead><tbody><tr><td></td><td>/usr/bin/sudo</td></tr><tr><td>whereis passwd</td><td>搜尋檔案，包含執行檔、說明檔、來源檔</td></tr><tr><td>locate keyword</td><td>搜尋部分名稱，所有出現keyword都會顯示</td></tr><tr><td>find PATH -option action</td><td>特殊條件搜尋</td></tr><tr><td>find / -mtime 0</td><td>#從根目錄下，找出第0天前的24小時內有變更過的檔案，改1就是1~2天變更的檔案</td></tr><tr><td>find / -name cleint</td><td>#找出檔名為client的檔案</td></tr><tr><td>find . -name &#39;<em>client</em>&#39;</td><td>#從目前目錄下，找出檔名有client的檔案</td></tr><tr><td>find / -user vince</td><td>#找出屬於vince的檔案</td></tr></tbody></table>',8),c=[o];function i(n,p,s,h,l,m){return r(),d("div",null,c)}const u=t(e,[["render",i]]);export{_ as __pageData,u as default};
